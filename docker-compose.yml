version: '2'

volumes:
  spotifycache:
  snapcastcache:
  #browsercache: # gone to the big volume farm in the sky
  browsercache2:
  homeassistantcache:
  proxy:
  proxy_certs:
  proxy_db:
  proxy_duplicati:

services:

  # Core services
  # -- Required for a fully featured installation of balenaSound
  # -- Mutiroom services can be removed if not using multiroom mode
  audio:
    build: ./core/audio
    privileged: true
    labels:
      io.balena.features.dbus: 1
    ports:
      - 4317:4317

  sound-supervisor:
    build: 
      context: .
      dockerfile: ./core/sound-supervisor/Dockerfile.template
    network_mode: host
    labels:
      io.balena.features.balena-api: '1'
      io.balena.features.supervisor-api: 1

  multiroom-server:
    build: ./core/multiroom/server
    restart: on-failure
    volumes:
      - 'snapcastcache:/var/cache/snapcast' # Persist client names
    ports:
      - 1704:1704
      - 1705:1705
      - 1780:1780


  # Plugins
  bluetooth:
    build: ./plugins/bluetooth
    restart: on-failure
    network_mode: host
    cap_add:
      - NET_ADMIN
    labels:
      io.balena.features.dbus: 1

  airplay:
    build: ./plugins/airplay
    restart: on-failure
    network_mode: host
    privileged: true
    labels:
      io.balena.features.dbus: 1

  music-streamer:
    build: ./plugins/music-streamer
    restart: on-failure
    network_mode: host
    privileged: true
    labels:
      io.balena.features.dbus: 1

  music-streamer-web-ui:
    build: ./plugins/music-streamer-web-ui
    restart: on-failure
    network_mode: host
    privileged: true
    labels:
      io.balena.features.dbus: 1

  weather-forecast-web-ui:
    build: ./plugins/weather-forecast-web-ui
    restart: on-failure
    network_mode: host
    privileged: true
    labels:
      io.balena.features.dbus: 1

  browser:
    build: ./browser
    privileged: true # required for UDEV to find plugged in peripherals such as a USB mouse
    network_mode: host
    volumes:
      - 'browsercache2:/data' # Only required if using PERSISTENT flag (see below)

  home-automation:
    build: ./plugins/home-automation
    ports:
      - 8123:8123
    privileged: true
    volumes:
      - 'homeassistantcache:/config'
    restart: always

  spotify:
    build: ./plugins/spotify
    restart: on-failure
    privileged: true
    network_mode: host
    volumes:
      - spotifycache:/var/cache/raspotify

  # https://github.com/balenablocks/hostname
  hostname:
    build: ./core/hostname
    restart: no
    labels:
      io.balena.features.supervisor-api: 1
    environment:
      SET_HOSTNAME: balena

  # https://hub.docker.com/r/jc21/nginx-proxy-manager/
  proxy:
    build: plugins/nginx/proxy
    network_mode: host
    volumes:
      - proxy:/data
      - proxy_certs:/etc/letsencrypt
    depends_on:
      - proxy_db

  # https://hub.docker.com/_/mariadb/
  proxy_db:
    build: plugins/nginx/mariadb
    volumes:
      - proxy_db:/var/lib/mysql
    environment:
      MYSQL_DATABASE: "npm"
      MYSQL_USER: "npm"
      MYSQL_PASSWORD: "npm"
    ports:
      - '3306:3306'

  # https://hub.docker.com/_/mariadb/
  proxy_sqldump:
    build: plugins/nginx/mariadb
    command: "/sqldump.sh"
    environment:
      MYSQL_DATABASE: "npm"
    volumes:
      - proxy_db:/var/lib/mysql
    depends_on:
      - proxy_db

  # https://hub.docker.com/r/linuxserver/duplicati
  proxy_duplicati:
    image: linuxserver/duplicati:arm64v8-latest
    environment:
      PUID: "0"
      PGID: "0"
      CLI_ARGS: --webservice-interface=any
    ports:
      - 8200:8200/tcp
    volumes:
      - proxy_duplicati:/config
      - proxy:/source/proxy
      - proxy_certs:/source/certs
      - proxy_db:/source/db
